<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  width="100%" height="100%" 
					  creationComplete="creationCompleteHandler(event)" >
	<fx:Script>
		<![CDATA[
			import com.epgis.sggis.SggisInitial;
			import com.epgis.sggis.events.ConnectionEvent;
			import com.epgis.sggis.maps.SggisMap;
			import com.epgis.sggis.services.ServiceUrlInfo;
			
			import mx.events.FlexEvent;
			
			import cn.seisys.SGGISViewer.AppEvent;
			import cn.seisys.SGGISViewer.ConfigData;
			
			public var map:SggisMap;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				AppEvent.addListener( AppEvent.CONFIG_LOADED, configLoadedHandler );
			}
			
			private function configLoadedHandler( event:AppEvent ):void
			{
				var configData:ConfigData = event.data as ConfigData;
				var mapServices:Object = configData.mapServices;
				ServiceUrlInfo.BaseServiceUrl = mapServices.baseServiceUrl;
				ServiceUrlInfo.FeatureServiceUrl = mapServices.featureServiceUrl;
				ServiceUrlInfo.MapServiceUrl = mapServices.mapServiceUrl;
				ServiceUrlInfo.QueryServiceUrl = mapServices.queryServiceUrl;
				ServiceUrlInfo.SpatialAnalysisServiceUrl = mapServices.spatialAnalysisServiceUrl;
				ServiceUrlInfo.ThematicMapServiceUrl = mapServices.thematicMapServiceUrl;
				ServiceUrlInfo.TileMapServiceUrl = mapServices.tileMapServiceUrl;
				ServiceUrlInfo.TopoAnalysisServiceUrl = mapServices.topoAnalysisServiceUrl;
				
				connectToServer( configData.userName, configData.password );
			}
			
			/**
			 * 连接到电网gis服务器
			 * @param
			 * userName: 配置文件中的用户名
			 * @param
			 * password: 配置文件中的密码
			 * */
			private function connectToServer( userName:String, password:String ):void
			{
				var sggisInit:SggisInitial = SggisInitial.getInstance();
				/**侦听建立连接成功事件*/
				sggisInit.addEventListener( ConnectionEvent.CONNECT_SUCCESS, connectionHander );
				/**侦听拒绝连接事件，用户名密码不匹配，用户权限不足均为此事件*/
				sggisInit.addEventListener( ConnectionEvent.CONNECT_REFUSED, connectionHander );
				/**侦听服务调用失败事件，服务异常或不存在，网络异常均为此事件*/
				sggisInit.addEventListener( ConnectionEvent.CONNECT_FAULT, connectionHander );
				/**建立连接*/
				sggisInit.getSggisConnection( userName, password ) ; 
			}
			
			private function connectionHander( event:ConnectionEvent ):void
			{
				var sggisInit:SggisInitial = SggisInitial.getInstance() ;
				/**清除事件侦听*/
				sggisInit.removeEventListener( ConnectionEvent.CONNECT_SUCCESS, connectionHander );
				sggisInit.removeEventListener( ConnectionEvent.CONNECT_REFUSED, connectionHander );
				sggisInit.removeEventListener( ConnectionEvent.CONNECT_FAULT, connectionHander );
				
				/**判断登录结果并进行相关处理*/
				switch(event.type)
				{
					case ConnectionEvent.CONNECT_FAULT:
						AppEvent.dispatch( AppEvent.APP_ERROR, "登录失败，请确定服务是否存在或网络是否正常" );
						break ;	
					case ConnectionEvent.CONNECT_REFUSED:
						AppEvent.dispatch( AppEvent.APP_ERROR, "登录失败，拒绝访问：" + event.message );
						break ;
					case ConnectionEvent.CONNECT_SUCCESS:
						var sggisMap:SggisMap = SggisInitial.getInstance().getDefaultMap( true, false );
						sggisMap.percentHeight = sggisMap.percentWidth = 100;
						addChild(sggisMap);
						break ;
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
</s:SkinnableContainer>
